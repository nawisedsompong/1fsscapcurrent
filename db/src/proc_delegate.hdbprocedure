PROCEDURE "proc_delegate"( out LT_VAR_OUT NVARCHAR(2),
out LT_POSTING_X  TABLE (
			"ESTIMATEPAYMENTDATE" DATE,
			"EMPLOYEE_ID" VARCHAR(100),
			"POSTING_AVAILABLE" VARCHAR(10),
			"CLAIM_REFERENCE" VARCHAR(50)
		),
IN LT_AP_CLAIM_TABLE "tt_approval_claim_type",
IN APP_COMMENT VARCHAR(500),
IN VAR_ARF VARCHAR(10),
IN DELEGATE_APPROVER VARCHAR(500)
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
 AS
BEGIN
		DECLARE IDX INT;
		DECLARE MAXIDX INT;
		DECLARE lv_index INT;
		DECLARE LT_EMP_ID VARCHAR(30);
		
				LT_CLAIM_PROC_DATA = SELECT 
								CS."TOTAL_LEVEL",
								CS."CURRENT_LEVEL",
								CS."APPROVER1",
								CS."APPROVER2",
								CS."APPROVER3",
								CASE WHEN CS."CURRENT_LEVEL" = '1' THEN :DELEGATE_APPROVER ELSE 
								CS."DELEGATION1" END as DELEGATION1,
								CASE WHEN CS."CURRENT_LEVEL" = '2' THEN :DELEGATE_APPROVER ELSE 
								CS."DELEGATION2" END as DELEGATION2,
								CASE WHEN CS."CURRENT_LEVEL" = '3' THEN :DELEGATE_APPROVER ELSE 
								CS."DELEGATION3" END as DELEGATION3,
								CASE WHEN CS."CURRENT_LEVEL" = '4' THEN :DELEGATE_APPROVER ELSE 
								CS."DELEGATION4" END as DELEGATION4,
								CS."CLAIM_REFERENCE",
								CS."EMPLOYEE_ID",
								CS."STATUS",
								CS."REMARKS_EMPLOYEE",
    							CS."REMARKS_APPROVER1",
    							CS."REMARKS_APPROVER2",
    							CS."REMARKS_APPROVER3",
    							CS."REMARKS_APPROVER4",
    							CS."REMARKS_REJECTION",
    							CS."FIRST_LEVEL_APPROVED_ON",
    							CS."SECOND_LEVEL_APPROVED_ON",
    							CS."THIRD_LEVEL_APPROVED_ON",
    							CS."FOURTH_LEVEL_APPROVED_ON",
								AP."CLAIM_OWNER_ID",
								AP."EMPLOYEE_ID" as CURRENT_APPROVER,
								AP."CATEGORY_CODE" as CATEGORY_CODE
							FROM  :LT_AP_CLAIM_TABLE AP
							INNER JOIN "BENEFIT_CLAIM_STATUS" CS
							ON AP."CLAIM_OWNER_ID"= CS."EMPLOYEE_ID" AND AP."CLAIM_REFERENCE"= CS."CLAIM_REFERENCE";
							
							
					                 
					MERGE INTO "BENEFIT_CLAIM_STATUS" CLS
    				USING :LT_CLAIM_PROC_DATA AS CLSE
    				ON CLSE."CLAIM_OWNER_ID"   = CLS."EMPLOYEE_ID"
					AND CLSE."CLAIM_REFERENCE"= CLS."CLAIM_REFERENCE"
    				WHEN MATCHED THEN UPDATE SET CLS."DELEGATION1" = CLSE."DELEGATION1",
    											 CLS."DELEGATION2" = CLSE."DELEGATION2",
    											 CLS."DELEGATION3" = CLSE."DELEGATION3",
    											 CLS."DELEGATION4" = CLSE."DELEGATION4",
    											 CLS."DELEGATION_COMMENTS" = :APP_COMMENT;	                 
					CALL "proc_approve_claim"(
													LT_AP_CLAIM_TABLE => :LT_AP_CLAIM_TABLE,
													VAR_ARF=>:VAR_ARF,
													APP_COMMENT=>:APP_COMMENT,
													-- LT_ON_BEH=>:LT_ON_BEH,
													LT_POSTING_X=>LT_POSTING_X,
					                                LT_VAR_OUT => LT_VAR_OUT);
					                                
					-- MERGE INTO "BENEFIT_CLAIM_STATUS" CLS
    	-- 			USING :LT_CLAIM_PROC_DATA AS CLSE
    	-- 			ON CLSE."CLAIM_OWNER_ID"   = CLS."EMPLOYEE_ID"
					-- AND CLSE."CLAIM_REFERENCE"= CLS."CLAIM_REFERENCE"
    	-- 			WHEN MATCHED THEN UPDATE SET CLS."APPROVER1" = CLSE."APPROVER1",
    	-- 										 CLS."APPROVER2" = CLSE."APPROVER2",
    	-- 										 CLS."APPROVER3" = CLSE."APPROVER3",
    	-- 										 CLS."DELEGATION_COMMENTS" = :APP_COMMENT;
    																			
    	-- 			MERGE INTO "BENEFIT_APPROVAL" APPROVAL
    	-- 			USING :LT_CLAIM_PROC_DATA AS CLSE
    	-- 			ON CLSE."CLAIM_OWNER_ID"   = APPROVAL."CLAIM_OWNER_ID"
					-- AND CLSE."CLAIM_REFERENCE"= APPROVAL."CLAIM_REFERENCE"
    	-- 			WHEN MATCHED  THEN UPDATE SET APPROVAL."EMPLOYEE_ID" = :DELEGATE_APPROVER,
    	-- 			APPROVAL."EMPLOYEE_NAME" = :DELEGATE_APPROVER;
    			
    				
    	-- 		-------------------------------------	
    	-- 		------ UPDATE DIFFERENT CLAIM TABLE-------------
    	-- 		-----------------------------------------
    		
    	-- 			---Medical Claim
	    -- 			MERGE INTO "BENEFIT_MEDICAL_CLAIM" MC  
    	-- 			USING :LT_CLAIM_PROC_DATA AS CLSE
    	-- 			ON CLSE."EMPLOYEE_ID"   = MC."EMPLOYEE_ID"
					-- AND CLSE."CLAIM_REFERENCE"= MC."CLAIM_REFERENCE"
					-- AND CLSE."CATEGORY_CODE"='MC'
    	-- 			WHEN MATCHED THEN UPDATE SET MC."FIRST_LEVEL_APPROVER" = CLSE."APPROVER1",
    	-- 										 MC."SECOND_LEVEL_APPROVER" = CLSE."APPROVER2",
    	-- 										 MC."THIRD_LEVEL_APPROVER" = CLSE."APPROVER3";
    				
    	-- 			---OverTime Claim
    	-- 			MERGE INTO "BENEFIT_OVERTIME_CLAIM" OVC 
    	-- 			USING :LT_CLAIM_PROC_DATA AS CLSE
    	-- 			ON CLSE."CLAIM_OWNER_ID"   = OVC."EMPLOYEE_ID"
					-- AND CLSE."CLAIM_REFERENCE"= OVC."CLAIM_REFERENCE"
					-- AND CLSE."CATEGORY_CODE"='TIM'
    	-- 			WHEN MATCHED THEN UPDATE SET OVC."FIRST_LEVEL_APPROVER" = CLSE."APPROVER1",
    	-- 										 OVC."SECOND_LEVEL_APPROVER" = CLSE."APPROVER2",
    	-- 										 OVC."THIRD_LEVEL_APPROVER" = CLSE."APPROVER3";
    				
    	-- 			---Work Related Claim
    	-- 			MERGE INTO "BENEFIT_WRC_MASTER_CLAIM" WRC  
    	-- 			USING :LT_CLAIM_PROC_DATA AS CLSE
    	-- 			ON CLSE."CLAIM_OWNER_ID"   = WRC."EMPLOYEE_ID"
					-- AND CLSE."CLAIM_REFERENCE"= WRC."CLAIM_REFERENCE"
					-- AND CLSE."CATEGORY_CODE"='WRC'
    	-- 			WHEN MATCHED THEN UPDATE SET WRC."FIRST_LEVEL_APPROVER" = CLSE."APPROVER1",
    	-- 										 WRC."SECOND_LEVEL_APPROVER" = CLSE."APPROVER2",
    	-- 										 WRC."THIRD_LEVEL_APPROVER" = CLSE."APPROVER3";
    				
    	-- 			--Work Related HR Claim
    	-- 			MERGE INTO "BENEFIT_WRC_HR_MASTER_CLAIM" WRC  
    	-- 			USING :LT_CLAIM_PROC_DATA AS CLSE
    	-- 			ON CLSE."CLAIM_OWNER_ID"   = WRC."EMPLOYEE_ID"
					-- AND CLSE."CLAIM_REFERENCE"= WRC."CLAIM_REFERENCE"
					-- AND CLSE."CATEGORY_CODE"='WRC_HR'
    	-- 			WHEN MATCHED THEN UPDATE SET WRC."FIRST_LEVEL_APPROVER" = CLSE."APPROVER1",
    	-- 										 WRC."SECOND_LEVEL_APPROVER" = CLSE."APPROVER2",
    	-- 										 WRC."THIRD_LEVEL_APPROVER" = CLSE."APPROVER3";
    				
    				
    	-- 			MERGE INTO "BENEFIT_AHP_LIC_MS_WIC_CLAIM" WRC  
    	-- 			USING :LT_CLAIM_PROC_DATA AS CLSE
    	-- 			ON CLSE."CLAIM_OWNER_ID"   = WRC."EMPLOYEE_ID"
					-- AND CLSE."CLAIM_REFERENCE"= WRC."CLAIM_REFERENCE"
					-- AND (CLSE."CATEGORY_CODE"='AHP'
					-- OR CLSE."CATEGORY_CODE"='WIC'
					-- OR CLSE."CATEGORY_CODE"='LIC'
					-- OR CLSE."CATEGORY_CODE"='MSR')
    	-- 			WHEN MATCHED THEN UPDATE SET WRC."FIRST_LEVEL_APPROVER" = CLSE."APPROVER1",
    	-- 										 WRC."SECOND_LEVEL_APPROVER" = CLSE."APPROVER2",
    	-- 										 WRC."THIRD_LEVEL_APPROVER" = CLSE."APPROVER3";
    				
    				
    	-- 			MERGE INTO "BENEFIT_SP_MASTER_CLAIM" WRC  
    	-- 			USING :LT_CLAIM_PROC_DATA AS CLSE
    	-- 			ON CLSE."CLAIM_OWNER_ID"   = WRC."EMPLOYEE_ID"
					-- AND CLSE."CLAIM_REFERENCE"= WRC."CLAIM_REFERENCE"
					-- AND CLSE."CATEGORY_CODE"='SP'
    	-- 			WHEN MATCHED THEN UPDATE SET WRC."FIRST_LEVEL_APPROVER" = CLSE."APPROVER1",
    	-- 										 WRC."SECOND_LEVEL_APPROVER" = CLSE."APPROVER2",
    	-- 										 WRC."THIRD_LEVEL_APPROVER" = CLSE."APPROVER3";
    				
     --               MERGE INTO "BENEFIT_SP1_MASTER_CLAIM" WRC  
    	-- 			USING :LT_CLAIM_PROC_DATA AS CLSE
    	-- 			ON CLSE."CLAIM_OWNER_ID"   = WRC."EMPLOYEE_ID"
					-- AND CLSE."CLAIM_REFERENCE"= WRC."CLAIM_REFERENCE"
					-- AND CLSE."CATEGORY_CODE"='SP1'
    	-- 			WHEN MATCHED THEN UPDATE SET WRC."FIRST_LEVEL_APPROVER" = CLSE."APPROVER1",
    	-- 										 WRC."SECOND_LEVEL_APPROVER" = CLSE."APPROVER2",
    	-- 										 WRC."THIRD_LEVEL_APPROVER" = CLSE."APPROVER3";

     --               MERGE INTO "BENEFIT_SP2_MASTER_CLAIM" WRC  
    	-- 			USING :LT_CLAIM_PROC_DATA AS CLSE
    	-- 			ON CLSE."CLAIM_OWNER_ID"   = WRC."EMPLOYEE_ID"
					-- AND CLSE."CLAIM_REFERENCE"= WRC."CLAIM_REFERENCE"
					-- AND CLSE."CATEGORY_CODE"='SP2'
    	-- 			WHEN MATCHED THEN UPDATE SET WRC."FIRST_LEVEL_APPROVER" = CLSE."APPROVER1",
    	-- 										 WRC."SECOND_LEVEL_APPROVER" = CLSE."APPROVER2",
    	-- 										 WRC."THIRD_LEVEL_APPROVER" = CLSE."APPROVER3";

     --               MERGE INTO "BENEFIT_SP3_MASTER_CLAIM" WRC  
    	-- 			USING :LT_CLAIM_PROC_DATA AS CLSE
    	-- 			ON CLSE."CLAIM_OWNER_ID"   = WRC."EMPLOYEE_ID"
					-- AND CLSE."CLAIM_REFERENCE"= WRC."CLAIM_REFERENCE"
					-- AND CLSE."CATEGORY_CODE"='SP3'
    	-- 			WHEN MATCHED THEN UPDATE SET WRC."FIRST_LEVEL_APPROVER" = CLSE."APPROVER1",
    	-- 										 WRC."SECOND_LEVEL_APPROVER" = CLSE."APPROVER2",
    	-- 										 WRC."THIRD_LEVEL_APPROVER" = CLSE."APPROVER3";
    				
    	-- 			MERGE INTO "BENEFIT_PTF_ACL_BCL_CLAIM" WRC  
    	-- 			USING :LT_CLAIM_PROC_DATA AS CLSE
    	-- 			ON CLSE."CLAIM_OWNER_ID"   = WRC."EMPLOYEE_ID"
					-- AND CLSE."CLAIM_REFERENCE"= WRC."CLAIM_REFERENCE"
					-- AND (CLSE."CATEGORY_CODE"='PTF'
					-- OR CLSE."CATEGORY_CODE"='CLS')
    	-- 			WHEN MATCHED THEN UPDATE SET WRC."FIRST_LEVEL_APPROVER" = CLSE."APPROVER1",
    	-- 										 WRC."SECOND_LEVEL_APPROVER" = CLSE."APPROVER2",
    	-- 										 WRC."THIRD_LEVEL_APPROVER" = CLSE."APPROVER3";
    				
    	-- 			MERGE INTO "BENEFIT_PC_CLAIM" WRC  
    	-- 			USING :LT_CLAIM_PROC_DATA AS CLSE
    	-- 			ON CLSE."CLAIM_OWNER_ID"   = WRC."EMPLOYEE_ID"
					-- AND CLSE."CLAIM_REFERENCE"= WRC."CLAIM_REFERENCE"
					-- AND CLSE."CATEGORY_CODE"='PC'
    	-- 			WHEN MATCHED THEN UPDATE SET WRC."FIRST_LEVEL_APPROVER" = CLSE."APPROVER1",
    	-- 										 WRC."SECOND_LEVEL_APPROVER" = CLSE."APPROVER2",
    	-- 										 WRC."THIRD_LEVEL_APPROVER" = CLSE."APPROVER3" ; 				
    				
    	-- 			MERGE INTO "BENEFIT_COV_MASTER_CLAIM" WRC  
    	-- 			USING :LT_CLAIM_PROC_DATA AS CLSE
    	-- 			ON CLSE."CLAIM_OWNER_ID"   = WRC."EMPLOYEE_ID"
					-- AND CLSE."CLAIM_REFERENCE"= WRC."CLAIM_REFERENCE"
					-- AND CLSE."CATEGORY_CODE"='COV'
    	-- 			WHEN MATCHED THEN UPDATE SET WRC."FIRST_LEVEL_APPROVER" = CLSE."APPROVER1",
    	-- 										 WRC."SECOND_LEVEL_APPROVER" = CLSE."APPROVER2",
    	-- 										 WRC."THIRD_LEVEL_APPROVER" = CLSE."APPROVER3" ;				
    				
    	-- 			MERGE INTO "BENEFIT_TC_MASTER_CLAIM" WRC  
    	-- 			USING :LT_CLAIM_PROC_DATA AS CLSE
    	-- 			ON CLSE."CLAIM_OWNER_ID"   = WRC."EMPLOYEE_ID"
					-- AND CLSE."CLAIM_REFERENCE"= WRC."CLAIM_REFERENCE"
					-- AND CLSE."CATEGORY_CODE"='TC'
    	-- 			WHEN MATCHED THEN UPDATE SET WRC."FIRST_LEVEL_APPROVER" = CLSE."APPROVER1",
    	-- 										 WRC."SECOND_LEVEL_APPROVER" = CLSE."APPROVER2",
    	-- 										 WRC."THIRD_LEVEL_APPROVER" = CLSE."APPROVER3" ;				
    				
    				
    				
		-- LT_VAR_OUT :='s'; 
	
END