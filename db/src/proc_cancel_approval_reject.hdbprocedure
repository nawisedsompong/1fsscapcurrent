PROCEDURE "proc_cancel_approval_reject"( out LT_VAR_OUT NVARCHAR(2),
IN LT_AP_CLAIM_TABLE "tt_approval_claim_type",
IN VAR_ARF VARCHAR(10),
IN APP_COMMENT VARCHAR(500)
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
 AS
BEGIN
		DECLARE IDX INT;
		DECLARE MAXIDX INT;
		DECLARE lv_index INT;
		DECLARE WRCount,WRHRCount,SPCount,COVCount,TCCount,SP1Count,SP2Count,SP3Count,SDFCCount,SDFRCount,CPCCount,OCCount,PAY_UPCount INT;
		
		
		LT_CLAIM_PROC_DATA = SELECT 
								 CCS."CLAIM_REFERENCE",
						    	 CCS."EMPLOYEE_ID",
						    	 CCS."CLAIM_DATE",
						    	 CCS."CLAIM_CATEGORY",
						    	 CCS."PARENT_CLAIM_REFERENCE" as "OLD_CLAIM",
						    	 AP."CATEGORY_CODE"
							FROM  "BENEFIT_CLAIM_CANCEL_MASTER" as CCS
							INNER JOIN :LT_AP_CLAIM_TABLE as AP
							on AP."CLAIM_REFERENCE" = CCS."CLAIM_REFERENCE";
							
		IF :VAR_ARF = 'C' or :VAR_ARF= 'R' THEN
		
    				---Work Related Claim
    				MERGE INTO "BENEFIT_WRC_LINEITEM_CLAIM" WRC  
    				USING :LT_CLAIM_PROC_DATA AS CLSE
    				ON CLSE."EMPLOYEE_ID"   = WRC."EMPLOYEE_ID"
					AND CLSE."CLAIM_REFERENCE"= WRC."PARENT_CLAIM_REFERENCE"
    				WHEN MATCHED THEN UPDATE SET WRC."PARENT_CLAIM_REFERENCE" = CLSE."OLD_CLAIM";
    				
    				
    				--Work Related HR Claim
    				MERGE INTO "BENEFIT_WRC_HR_LINEITEM_CLAIM" WRC  
    				USING :LT_CLAIM_PROC_DATA AS CLSE
    				ON CLSE."EMPLOYEE_ID"   = WRC."EMPLOYEE_ID"
					AND CLSE."CLAIM_REFERENCE"= WRC."PARENT_CLAIM_REFERENCE"
    				WHEN MATCHED THEN UPDATE SET WRC."PARENT_CLAIM_REFERENCE" = CLSE."OLD_CLAIM";
    		
    				
    				
    				MERGE INTO "BENEFIT_SP_LINEITEM_CLAIM" WRC  
    				USING :LT_CLAIM_PROC_DATA AS CLSE
    				ON CLSE."EMPLOYEE_ID"   = WRC."EMPLOYEE_ID"
					AND CLSE."CLAIM_REFERENCE"= WRC."PARENT_CLAIM_REFERENCE"
    				WHEN MATCHED THEN UPDATE SET WRC."PARENT_CLAIM_REFERENCE" = CLSE."OLD_CLAIM";

                    MERGE INTO "BENEFIT_SP1_LINEITEM_CLAIM" WRC  
    				USING :LT_CLAIM_PROC_DATA AS CLSE
    				ON CLSE."EMPLOYEE_ID"   = WRC."EMPLOYEE_ID"
					AND CLSE."CLAIM_REFERENCE"= WRC."PARENT_CLAIM_REFERENCE"
    				WHEN MATCHED THEN UPDATE SET WRC."PARENT_CLAIM_REFERENCE" = CLSE."OLD_CLAIM";

                    MERGE INTO "BENEFIT_SP2_LINEITEM_CLAIM" WRC  
    				USING :LT_CLAIM_PROC_DATA AS CLSE
    				ON CLSE."EMPLOYEE_ID"   = WRC."EMPLOYEE_ID"
					AND CLSE."CLAIM_REFERENCE"= WRC."PARENT_CLAIM_REFERENCE"
    				WHEN MATCHED THEN UPDATE SET WRC."PARENT_CLAIM_REFERENCE" = CLSE."OLD_CLAIM";

                    MERGE INTO "BENEFIT_SP3_LINEITEM_CLAIM" WRC  
    				USING :LT_CLAIM_PROC_DATA AS CLSE
    				ON CLSE."EMPLOYEE_ID"   = WRC."EMPLOYEE_ID"
					AND CLSE."CLAIM_REFERENCE"= WRC."PARENT_CLAIM_REFERENCE"
    				WHEN MATCHED THEN UPDATE SET WRC."PARENT_CLAIM_REFERENCE" = CLSE."OLD_CLAIM";
    				
    				
    				
    				MERGE INTO "BENEFIT_COV_LINEITEM_CLAIM" WRC  
    				USING :LT_CLAIM_PROC_DATA AS CLSE
    				ON CLSE."EMPLOYEE_ID"   = WRC."EMPLOYEE_ID"
					AND CLSE."CLAIM_REFERENCE"= WRC."PARENT_CLAIM_REFERENCE"
    				WHEN MATCHED THEN UPDATE SET WRC."PARENT_CLAIM_REFERENCE" = CLSE."OLD_CLAIM";
    				
    				
    				MERGE INTO "BENEFIT_TC_LINEITEM_CLAIM" WRC  
    				USING :LT_CLAIM_PROC_DATA AS CLSE
    				ON CLSE."EMPLOYEE_ID"   = WRC."EMPLOYEE_ID"
					AND CLSE."CLAIM_REFERENCE"= WRC."PARENT_CLAIM_REFERENCE"
    				WHEN MATCHED THEN UPDATE SET WRC."PARENT_CLAIM_REFERENCE" = CLSE."OLD_CLAIM";
    				
    				MERGE INTO "BENEFIT_SDFC_LINEITEM_CLAIM" SDFC  
    				USING :LT_CLAIM_PROC_DATA AS CLSE
    				ON CLSE."EMPLOYEE_ID"   = SDFC."EMPLOYEE_ID"
					AND CLSE."CLAIM_REFERENCE"= SDFC."PARENT_CLAIM_REFERENCE"
    				WHEN MATCHED THEN UPDATE SET SDFC."PARENT_CLAIM_REFERENCE" = CLSE."OLD_CLAIM";
    				
    				MERGE INTO "BENEFIT_SDFR_LINEITEM_CLAIM" SDFR  
    				USING :LT_CLAIM_PROC_DATA AS CLSE
    				ON CLSE."EMPLOYEE_ID"   = SDFR."EMPLOYEE_ID"
					AND CLSE."CLAIM_REFERENCE"= SDFR."PARENT_CLAIM_REFERENCE"
    				WHEN MATCHED THEN UPDATE SET SDFR."PARENT_CLAIM_REFERENCE" = CLSE."OLD_CLAIM";
    				
    				MERGE INTO "BENEFIT_CPC_LINEITEM_CLAIM" CPC  
    				USING :LT_CLAIM_PROC_DATA AS CLSE
    				ON CLSE."EMPLOYEE_ID"   = CPC."EMPLOYEE_ID"
					AND CLSE."CLAIM_REFERENCE"= CPC."PARENT_CLAIM_REFERENCE"
    				WHEN MATCHED THEN UPDATE SET CPC."PARENT_CLAIM_REFERENCE" = CLSE."OLD_CLAIM";
    				
    				MERGE INTO "BENEFIT_OC_LINEITEM_CLAIM" OC  
    				USING :LT_CLAIM_PROC_DATA AS CLSE
    				ON CLSE."EMPLOYEE_ID"   = OC."EMPLOYEE_ID"
					AND CLSE."CLAIM_REFERENCE"= OC."PARENT_CLAIM_REFERENCE"
    				WHEN MATCHED THEN UPDATE SET OC."PARENT_CLAIM_REFERENCE" = CLSE."OLD_CLAIM";
    				
    				MERGE INTO "BENEFIT_PAY_UP_LINEITEM_CLAIM" PAY_UP  
    				USING :LT_CLAIM_PROC_DATA AS CLSE
    				ON CLSE."EMPLOYEE_ID"   = PAY_UP."EMPLOYEE_ID"
					AND CLSE."CLAIM_REFERENCE"= PAY_UP."PARENT_CLAIM_REFERENCE"
    				WHEN MATCHED THEN UPDATE SET PAY_UP."PARENT_CLAIM_REFERENCE" = CLSE."OLD_CLAIM";
    				
    		ELSE 
    		
    		FOR lv_index IN 1..record_count(:LT_CLAIM_PROC_DATA) DO
    		
    			DECLARE OLD_CLAIM_REFER VARCHAR(100);
    			OLD_CLAIM_REFER = :LT_CLAIM_PROC_DATA.OLD_CLAIM[lv_index]; 
    			
    			SELECT COUNT(*) into WRCount FROM "BENEFIT_WRC_LINEITEM_CLAIM" WHERE "PARENT_CLAIM_REFERENCE" = :OLD_CLAIM_REFER; 
    			SELECT COUNT(*) into WRHRCount  FROM "BENEFIT_WRC_HR_LINEITEM_CLAIM" WHERE "PARENT_CLAIM_REFERENCE" = :OLD_CLAIM_REFER;
    			SELECT COUNT(*) into SPCount FROM "BENEFIT_SP_LINEITEM_CLAIM" WHERE "PARENT_CLAIM_REFERENCE" = :OLD_CLAIM_REFER;
    			SELECT COUNT(*) into COVCount FROM "BENEFIT_COV_LINEITEM_CLAIM" WHERE "PARENT_CLAIM_REFERENCE" = :OLD_CLAIM_REFER;
    			SELECT COUNT(*) into TCCount FROM "BENEFIT_TC_LINEITEM_CLAIM" WHERE "PARENT_CLAIM_REFERENCE" = :OLD_CLAIM_REFER;
    			SELECT COUNT(*) into SDFCCount FROM "BENEFIT_SDFC_LINEITEM_CLAIM" WHERE "PARENT_CLAIM_REFERENCE" = :OLD_CLAIM_REFER; 
    			SELECT COUNT(*) into SDFRCount  FROM "BENEFIT_SDFR_LINEITEM_CLAIM" WHERE "PARENT_CLAIM_REFERENCE" = :OLD_CLAIM_REFER;
    			SELECT COUNT(*) into CPCCount FROM "BENEFIT_CPC_LINEITEM_CLAIM" WHERE "PARENT_CLAIM_REFERENCE" = :OLD_CLAIM_REFER;
    			SELECT COUNT(*) into OCCount FROM "BENEFIT_OC_LINEITEM_CLAIM" WHERE "PARENT_CLAIM_REFERENCE" = :OLD_CLAIM_REFER;
    			SELECT COUNT(*) into PAY_UPCount FROM "BENEFIT_PAY_UP_LINEITEM_CLAIM" WHERE "PARENT_CLAIM_REFERENCE" = :OLD_CLAIM_REFER;
			
			
			IF WRCount = 0 and  WRHRCount = 0 and SPCount = 0 and COVCount = 0 and TCCount = 0 and 
			SDFCCount = 0 and SDFRCount = 0 and CPCCount = 0 and OCCount = 0 and PAY_UPCount = 0 THEN
			
				UPDATE "BENEFIT_CLAIM_STATUS"  SET "STATUS" = 'Cancelled' WHERE "CLAIM_REFERENCE" = :OLD_CLAIM_REFER; 
    			UPDATE "BENEFIT_APPROVAL"  SET "CLAIM_STATUS" = 'Cancelled' WHERE "CLAIM_REFERENCE" = :OLD_CLAIM_REFER;
    			
    			
    			UPDATE "BENEFIT_MEDICAL_CLAIM"  SET "CLAIM_STATUS" = 'Cancelled' WHERE "CLAIM_REFERENCE" = :OLD_CLAIM_REFER;
    			UPDATE "BENEFIT_CPR_CLAIM"  SET "CLAIM_STATUS" = 'Cancelled' WHERE "CLAIM_REFERENCE" = :OLD_CLAIM_REFER;
    			UPDATE "BENEFIT_OVERTIME_CLAIM"  SET "CLAIM_STATUS" = 'Cancelled' WHERE "CLAIM_REFERENCE" = :OLD_CLAIM_REFER;
    			UPDATE "BENEFIT_WRC_MASTER_CLAIM"  SET "CLAIM_STATUS" = 'Cancelled' WHERE "CLAIM_REFERENCE" = :OLD_CLAIM_REFER;
    			UPDATE "BENEFIT_WRC_HR_MASTER_CLAIM"  SET "CLAIM_STATUS" = 'Cancelled' WHERE "CLAIM_REFERENCE" = :OLD_CLAIM_REFER;
    			UPDATE "BENEFIT_AHP_LIC_MS_WIC_CLAIM"  SET "CLAIM_STATUS" = 'Cancelled' WHERE "CLAIM_REFERENCE" = :OLD_CLAIM_REFER;
    			UPDATE "BENEFIT_SP_MASTER_CLAIM"  SET "CLAIM_STATUS" = 'Cancelled' WHERE "CLAIM_REFERENCE" = :OLD_CLAIM_REFER;
                UPDATE "BENEFIT_SP1_MASTER_CLAIM"  SET "CLAIM_STATUS" = 'Cancelled' WHERE "CLAIM_REFERENCE" = :OLD_CLAIM_REFER;
                UPDATE "BENEFIT_SP2_MASTER_CLAIM"  SET "CLAIM_STATUS" = 'Cancelled' WHERE "CLAIM_REFERENCE" = :OLD_CLAIM_REFER;
                UPDATE "BENEFIT_SP3_MASTER_CLAIM"  SET "CLAIM_STATUS" = 'Cancelled' WHERE "CLAIM_REFERENCE" = :OLD_CLAIM_REFER;
    			UPDATE "BENEFIT_PTF_ACL_BCL_CLAIM"  SET "CLAIM_STATUS" = 'Cancelled' WHERE "CLAIM_REFERENCE" = :OLD_CLAIM_REFER;
				UPDATE "BENEFIT_PC_CLAIM"  SET "CLAIM_STATUS" = 'Cancelled' WHERE "CLAIM_REFERENCE" = :OLD_CLAIM_REFER;
				UPDATE "BENEFIT_COV_MASTER_CLAIM"  SET "CLAIM_STATUS" = 'Cancelled' WHERE "CLAIM_REFERENCE" = :OLD_CLAIM_REFER;
				UPDATE "BENEFIT_TC_MASTER_CLAIM"  SET "CLAIM_STATUS" = 'Cancelled' WHERE "CLAIM_REFERENCE" = :OLD_CLAIM_REFER;
				UPDATE "BENEFIT_SDFC_MASTER_CLAIM"  SET "CLAIM_STATUS" = 'Cancelled' WHERE "CLAIM_REFERENCE" = :OLD_CLAIM_REFER;
				UPDATE "BENEFIT_SDFR_MASTER_CLAIM"  SET "CLAIM_STATUS" = 'Cancelled' WHERE "CLAIM_REFERENCE" = :OLD_CLAIM_REFER;
				UPDATE "BENEFIT_CPC_MASTER_CLAIM"  SET "CLAIM_STATUS" = 'Cancelled' WHERE "CLAIM_REFERENCE" = :OLD_CLAIM_REFER;
				UPDATE "BENEFIT_OC_MASTER_CLAIM"  SET "CLAIM_STATUS" = 'Cancelled' WHERE "CLAIM_REFERENCE" = :OLD_CLAIM_REFER;
				UPDATE "BENEFIT_PAY_UP_MASTER_CLAIM"  SET "CLAIM_STATUS" = 'Cancelled' WHERE "CLAIM_REFERENCE" = :OLD_CLAIM_REFER;
						
			END IF;
			
		END FOR ;
	END IF;
			
		 LT_VAR_OUT :='s';
	
END