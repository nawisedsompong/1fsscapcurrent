PROCEDURE "proc_Approver_List"( out LT_VAR_OUT TABLE(
			"EMPLOYEE_ID" VARCHAR(50),
			"FIRSTNAME" VARCHAR(100),
			"LASTNAME" VARCHAR(100),
			"FULLNAME" VARCHAR(100)
),
IN LT_CLAIM_OWNER VARCHAR(50),
IN CLAIM_CODE_IN VARCHAR (50), 
IN RECEIPT_DATE  Date,
IN BEHALF  VARCHAR(10)
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
 AS
BEGIN
		DECLARE IDX INT;
		DECLARE MAXIDX INT;
		DECLARE lv_index INT;
		DECLARE ISPAY VARCHAR(20);
		DECLARE LT_CLAIM_TABLE "tt_claim_type";
	
    	
			:LT_CLAIM_TABLE.INSERT((:LT_CLAIM_OWNER,:CLAIM_CODE_IN,'','','','0.00','','','','',:RECEIPT_DATE,'',''),1);
			
			LT_EMP_TABLE = SELECT * FROM "get_ApprovalStructure_Epm"(:LT_CLAIM_TABLE,:LT_CLAIM_OWNER);
			LT_EMP_TABLE_HR = SELECT * FROM "get_ApprovalStructure_Hr"(:LT_CLAIM_TABLE,:LT_CLAIM_OWNER);
			LT_PAY = SELECT * FROM "BENEFIT_COMPANY_CLAIM_CATEGORY" WHERE "CLAIM_CODE" = :CLAIM_CODE_IN;
			

			LT_APP_LOGIC = SELECT 
								AST."CLAIM_CODE",
								AST."DESCRIPTION",
								AST."FIRST_LEVEL_APPROVER",
								ASTHR."HR_CHECKER"."USERID" as"HR_CHECKER_USERID"
							FROM "BENEFIT_APPROVAL_STRUCTURE" AST
							INNER JOIN :LT_EMP_TABLE AppEmp
							on AppEmp."SEQUENCE_OF_CHECK" = AST."SEQUENCE_OF_CHECK" AND AppEmp."CLAIM_CODE"=AST."CLAIM_CODE"
							INNER JOIN "BENEFIT_APPROVAL_STRUCTURE_HR" ASTHR 
							ON AST."CLAIM_CODE"=ASTHR."CLAIM_CODE"
							INNER JOIN :LT_EMP_TABLE_HR AppEmphr
							on AppEmphr."SEQUENCE_OF_CHECK" = ASTHR."SEQUENCE_OF_CHECK" AND AppEmphr."CLAIM_CODE"=ASTHR."CLAIM_CODE";
		
			
			
			IF :BEHALF='Y' THEN
			
			LT_VAR_EMPLOYEEID = SELECT 
								filteredEmpl."HR_CHECKER_USERID" as "EMPLOYEE_ID"
								FROM :LT_APP_LOGIC filteredEmpl;
			
			ELSEIF :LT_APP_LOGIC.FIRST_LEVEL_APPROVER[1]='LocationRO' THEN
			
			LT_VAR_EMPLOYEEID = SELECT 
								ro."LOCATION_RO_EMPLOYEEID" as "EMPLOYEE_ID"
								FROM "BENEFIT_LOCATION_RO" ro
								INNER JOIN (
										SELECT                                   -------------------Employee Job may have Department as Null as it is not mandatory---------
												CASE 
												WHEN "DEPARTMENT" IS NULL THEN 'N/A'
												ELSE "DEPARTMENT"
												END as "DEPARTMENT" ,
												"DIVISION",
												"PERSONIDEXTERNAL",
												"STARTDATE",
												"ENDDATE"
										FROM "SF_EMPLOYEEINFORMATION"(UserID => :LT_CLAIM_OWNER)
								) empmast
								on (ro."DEPARTMENT"=empmast."DEPARTMENT" or ro."DEPARTMENT"= 'N/A')and ro."DIVISION"=empmast."DIVISION"
								and ro."START_DATE" <= TO_SECONDDATE (CONCAT(:RECEIPT_DATE, ' 00:00:00'), 'YYYY-MM-DD HH24:MI:SS')
								and ro."END_DATE" >= TO_SECONDDATE (CONCAT(:RECEIPT_DATE, ' 00:00:00'), 'YYYY-MM-DD HH24:MI:SS')
								and empmast."STARTDATE" <= TO_SECONDDATE (CONCAT(:RECEIPT_DATE, ' 00:00:00'), 'YYYY-MM-DD HH24:MI:SS')
								and empmast."ENDDATE" >= TO_SECONDDATE (CONCAT(:RECEIPT_DATE, ' 00:00:00'), 'YYYY-MM-DD HH24:MI:SS');
								
			ELSEIF :LT_APP_LOGIC.FIRST_LEVEL_APPROVER[1]='RO' THEN
			
			LT_VAR_EMPLOYEEID = SELECT 
								empmast."MANAGERID" as "EMPLOYEE_ID"
								FROM "SF_EMPLOYEEINFORMATION"(UserID => :LT_CLAIM_OWNER) empmast
								where empmast."STARTDATE" <= TO_SECONDDATE (CONCAT(:RECEIPT_DATE, ' 00:00:00'), 'YYYY-MM-DD HH24:MI:SS')
								and empmast."ENDDATE" >= TO_SECONDDATE (CONCAT(:RECEIPT_DATE, ' 00:00:00'), 'YYYY-MM-DD HH24:MI:SS');
			
			ELSEIF :LT_APP_LOGIC.FIRST_LEVEL_APPROVER[1]='ClaimsAdministrator' THEN
			
			LT_VAR_EMPLOYEEID = SELECT TOP 1
								ADMINe."ADMIN" as "EMPLOYEE_ID"
								FROM "BENEFIT_CLAIM_ADMIN" ADMINe
								where ADMINe."CLAIM_CODE" = :CLAIM_CODE_IN ;
								
			ELSEIF :LT_PAY.CATEGORY_CODE[1] = 'PAY_UP' THEN 
			 
			PAY_APPROVER_LIST = SELECT "CLAIM_CODE" FROM "BENEFIT_COMPANY_CLAIM_CATEGORY" WHERE "CATEGORY_CODE" ='PAY_UP';
			
			LT_VAR_EMPLOYEEID = SELECT 
									AST."FIRST_LEVEL_APPROVER" as "EMPLOYEE_ID"
								FROM "BENEFIT_APPROVAL_STRUCTURE" AST
								INNER JOIN :PAY_APPROVER_LIST PAYLIST
								on PAYLIST."CLAIM_CODE"=AST."CLAIM_CODE";
			
			ELSE 
	
			LT_VAR_EMPLOYEEID = SELECT 
								filteredEmpl."FIRST_LEVEL_APPROVER" as "EMPLOYEE_ID"
								FROM :LT_APP_LOGIC filteredEmpl;
			END IF;
			
			LT_VAR_OUT = SELECT 
									"EMPLOYEE_ID",
									"FIRSTNAME",
									"LASTNAME",
									"FULLNAME"
								from(
										SELECT
												EMPID."EMPLOYEE_ID",
												PERSDET."FIRSTNAME",
												PERSDET."LASTNAME",
												PERSDET."STARTDATE",
												PERSDET."FULLNAME"
											FROM :LT_VAR_EMPLOYEEID EMPID
											INNER JOIN "SF_PERPERSONALVIEW" PERSDET
											ON PERSDET."PERSONIDEXTERNAL" = EMPID."EMPLOYEE_ID"
											INNER JOIN "SF_EMPJOB" EMPDET
											ON PERSDET."PERSONIDEXTERNAL" = EMPDET."USERID"
											and  EMPDET."STARTDATE" <= TO_SECONDDATE (CONCAT(:RECEIPT_DATE, ' 00:00:00'), 'YYYY-MM-DD HH24:MI:SS')
											and EMPDET."ENDDATE" >= TO_SECONDDATE (CONCAT(:RECEIPT_DATE, ' 00:00:00'), 'YYYY-MM-DD HH24:MI:SS')
											INNER JOIN "SF_EMPEMPLOYMENT" EMPEMPLOY
											ON EMPDET."USERID" = EMPEMPLOY."PERSONIDEXTERNAL"
											and EMPEMPLOY."STARTDATE" <= TO_SECONDDATE (CONCAT(:RECEIPT_DATE, ' 00:00:00'), 'YYYY-MM-DD HH24:MI:SS')
											and (EMPEMPLOY."ENDDATE" >= TO_SECONDDATE (CONCAT(:RECEIPT_DATE, ' 00:00:00'), 'YYYY-MM-DD HH24:MI:SS')
											or EMPEMPLOY."ENDDATE" IS NULL)
											ORDER BY EMPDET."STARTDATE" DESC
								);
			
			 
	
END