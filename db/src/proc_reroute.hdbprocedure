PROCEDURE "proc_reroute"( out LT_VAR_OUT NVARCHAR(2),
-- out LT_POSTING_X  TABLE (
-- 			"ESTIMATEPAYMENTDATE" DATE,
-- 			"EMPLOYEE_ID" VARCHAR(100),
-- 			"POSTING_AVAILABLE" VARCHAR(10),
-- 			"CLAIM_REFERENCE" VARCHAR(50)
-- 		),
IN LT_AP_CLAIM_TABLE "tt_approval_claim_type",
IN APP_COMMENT VARCHAR(500),
IN VAR_ARF VARCHAR(10),
IN REROUTE_APPROVER VARCHAR(500),
IN REROUTE_BY VARCHAR(500)
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
 AS
BEGIN
		DECLARE IDX INT;
		DECLARE MAXIDX INT;
		DECLARE lv_index INT;
		DECLARE LT_EMP_ID VARCHAR(30);
		
				LT_CLAIM_PROC_DATA = SELECT 
								CS."TOTAL_LEVEL",
								CS."CURRENT_LEVEL",
								-- CS."APPROVER1",
								-- CS."APPROVER2",
								-- CS."APPROVER3",
								-- CS."APPROVER4",
								-- CASE WHEN CS."CURRENT_LEVEL" = '1' THEN :REROUTE_APPROVER ELSE 
								-- CS."REROUTE1" END as REROUTE1,
								-- CASE WHEN CS."CURRENT_LEVEL" = '2' THEN :REROUTE_APPROVER ELSE 
								-- CS."REROUTE2" END as REROUTE2,
								-- CASE WHEN CS."CURRENT_LEVEL" = '3' THEN :REROUTE_APPROVER ELSE 
								-- CS."REROUTE3" END as REROUTE3,
								-- CASE WHEN CS."CURRENT_LEVEL" = '4' THEN :REROUTE_APPROVER ELSE 
								-- CS."REROUTE4" END as REROUTE4,
								CASE WHEN CS."CURRENT_LEVEL" = '1' THEN :REROUTE_APPROVER ELSE 
								CS."APPROVER1" END as APPROVER1,
								CASE WHEN CS."CURRENT_LEVEL" = '2' THEN :REROUTE_APPROVER ELSE 
								CS."APPROVER2" END as APPROVER2,
								CASE WHEN CS."CURRENT_LEVEL" = '3' THEN :REROUTE_APPROVER ELSE 
								CS."APPROVER3" END as APPROVER3,
								CASE WHEN CS."CURRENT_LEVEL" = '4' THEN :REROUTE_APPROVER ELSE 
								CS."APPROVER4" END as APPROVER4,
								CS."CLAIM_REFERENCE",
								CS."EMPLOYEE_ID",
								CS."STATUS",
								CS."REMARKS_EMPLOYEE",
    							CS."REMARKS_APPROVER1",
    							CS."REMARKS_APPROVER2",
    							CS."REMARKS_APPROVER3",
    							CS."REMARKS_APPROVER4",
    							CS."REMARKS_REJECTION",
    							CS."FIRST_LEVEL_APPROVED_ON",
    							CS."SECOND_LEVEL_APPROVED_ON",
    							CS."THIRD_LEVEL_APPROVED_ON",
    							CS."FOURTH_LEVEL_APPROVED_ON",
								AP."CLAIM_OWNER_ID",
								AP."EMPLOYEE_ID" as CURRENT_APPROVER,
								AP."CATEGORY_CODE" as CATEGORY_CODE
							FROM  :LT_AP_CLAIM_TABLE AP
							INNER JOIN "BENEFIT_CLAIM_STATUS" CS
							ON AP."CLAIM_OWNER_ID"= CS."EMPLOYEE_ID" AND AP."CLAIM_REFERENCE"= CS."CLAIM_REFERENCE";
							
							
					MERGE INTO "BENEFIT_CLAIM_STATUS" CLS
    				USING :LT_CLAIM_PROC_DATA AS CLSE
    				ON CLSE."CLAIM_OWNER_ID"   = CLS."EMPLOYEE_ID"
					AND CLSE."CLAIM_REFERENCE"= CLS."CLAIM_REFERENCE"
    				WHEN MATCHED THEN UPDATE SET CLS."APPROVER1" = CLSE."APPROVER1",
    											 CLS."APPROVER2" = CLSE."APPROVER2",
    											 CLS."APPROVER3" = CLSE."APPROVER3",
    											 CLS."APPROVER4" = CLSE."APPROVER4";
    											 
					INSERT INTO "BENEFIT_REROUTE_HISTORY"
    				(	
    					SELECT 		
    											CLSE.CLAIM_REFERENCE ,
										    	CLSE.CURRENT_APPROVER,
												CLSE.CURRENT_LEVEL,
												:REROUTE_APPROVER,
										    	TO_SECONDDATE (CONCAT(CURRENT_DATE,' 00:00:00'), 'YYYY-MM-DD HH24:MI:SS'),
										    	:REROUTE_BY,
										    	:APP_COMMENT
										    FROM :LT_CLAIM_PROC_DATA as CLSE
    				);		
					                 
					-- MERGE INTO "BENEFIT_CLAIM_STATUS" CLS
    	-- 			USING :LT_CLAIM_PROC_DATA AS CLSE
    	-- 			ON CLSE."CLAIM_OWNER_ID"   = CLS."EMPLOYEE_ID"
					-- AND CLSE."CLAIM_REFERENCE"= CLS."CLAIM_REFERENCE"
    	-- 			WHEN MATCHED THEN UPDATE SET CLS."REROUTE1" = CLSE."REROUTE1",
    	-- 										 CLS."REROUTE2" = CLSE."REROUTE2",
    	-- 										 CLS."REROUTE3" = CLSE."REROUTE3",
    	-- 										 CLS."REROUTE4" = CLSE."REROUTE4",
    	-- 										 CLS."REROUTE_COMMENTS" = :APP_COMMENT;	  
    	
					-- CALL "proc_approve_claim"(
					-- 								LT_AP_CLAIM_TABLE => :LT_AP_CLAIM_TABLE,
					-- 								VAR_ARF=>:VAR_ARF,
					-- 								APP_COMMENT=>:APP_COMMENT,
					-- 								-- LT_ON_BEH=>:LT_ON_BEH,
					-- 								LT_POSTING_X=>LT_POSTING_X,
					--                                 LT_VAR_OUT => LT_VAR_OUT);
					                                
					-- MERGE INTO "BENEFIT_CLAIM_STATUS" CLS
    	-- 			USING :LT_CLAIM_PROC_DATA AS CLSE
    	-- 			ON CLSE."CLAIM_OWNER_ID"   = CLS."EMPLOYEE_ID"
					-- AND CLSE."CLAIM_REFERENCE"= CLS."CLAIM_REFERENCE"
    	-- 			WHEN MATCHED THEN UPDATE SET CLS."APPROVER1" = CLSE."APPROVER1",
    	-- 										 CLS."APPROVER2" = CLSE."APPROVER2",
    	-- 										 CLS."APPROVER3" = CLSE."APPROVER3",
    	-- 										 CLS."DELEGATION_COMMENTS" = :APP_COMMENT;
    																			
    				MERGE INTO "BENEFIT_APPROVAL" APPROVAL
    				USING :LT_CLAIM_PROC_DATA AS CLSE
    				ON CLSE."CLAIM_OWNER_ID"   = APPROVAL."CLAIM_OWNER_ID"
					AND CLSE."CLAIM_REFERENCE"= APPROVAL."CLAIM_REFERENCE"
    				WHEN MATCHED  THEN UPDATE SET APPROVAL."EMPLOYEE_ID" = :REROUTE_APPROVER,
    				APPROVAL."EMPLOYEE_NAME" = :REROUTE_APPROVER;
    			
    				
    	-- 		-------------------------------------	
    	-- 		------ UPDATE DIFFERENT CLAIM TABLE-------------
    	-- 		-----------------------------------------
    		
    	---Medical Claim
	    			MERGE INTO "BENEFIT_MEDICAL_CLAIM" MC  
    				USING :LT_CLAIM_PROC_DATA AS CLSE
    				ON CLSE."CLAIM_OWNER_ID"   = MC."EMPLOYEE_ID"
					AND CLSE."CLAIM_REFERENCE"= MC."CLAIM_REFERENCE"
					AND CLSE."CATEGORY_CODE"='MC'
    				WHEN MATCHED THEN UPDATE SET 
    				MC."FIRST_LEVEL_APPROVER" = CLSE."APPROVER1",
    				MC."SECOND_LEVEL_APPROVER" = CLSE."APPROVER2",
    				MC."THIRD_LEVEL_APPROVER" = CLSE."APPROVER3";
    				
    				---Clinical Placement Request
    				
    				MERGE INTO "BENEFIT_CPR_CLAIM" CPR  
    				USING :LT_CLAIM_PROC_DATA AS CLSE
    				ON CLSE."CLAIM_OWNER_ID"   = CPR."EMPLOYEE_ID"
					AND CLSE."CLAIM_REFERENCE"= CPR."CLAIM_REFERENCE"
					AND CLSE."CATEGORY_CODE"='CPR'
    				WHEN MATCHED THEN UPDATE SET 
    				CPR."FIRST_LEVEL_APPROVER" = CLSE."APPROVER1",
    				CPR."SECOND_LEVEL_APPROVER" = CLSE."APPROVER2",
    				CPR."THIRD_LEVEL_APPROVER" = CLSE."APPROVER3";
    				
    				
    				---OverTime Claim
    				MERGE INTO "BENEFIT_OVERTIME_CLAIM" OVC 
    				USING :LT_CLAIM_PROC_DATA AS CLSE
    				ON CLSE."CLAIM_OWNER_ID"   = OVC."EMPLOYEE_ID"
					AND CLSE."CLAIM_REFERENCE"= OVC."CLAIM_REFERENCE"
					AND CLSE."CATEGORY_CODE"='TIM'
    				WHEN MATCHED THEN UPDATE SET 
    				OVC."FIRST_LEVEL_APPROVER" = CLSE."APPROVER1",
    				OVC."SECOND_LEVEL_APPROVER" = CLSE."APPROVER2",
    				OVC."THIRD_LEVEL_APPROVER" = CLSE."APPROVER3";
    				
    				---Work Related Claim
    				MERGE INTO "BENEFIT_WRC_MASTER_CLAIM" WRC  
    				USING :LT_CLAIM_PROC_DATA AS CLSE
    				ON CLSE."CLAIM_OWNER_ID"   = WRC."EMPLOYEE_ID"
					AND CLSE."CLAIM_REFERENCE"= WRC."CLAIM_REFERENCE"
					AND CLSE."CATEGORY_CODE"='WRC'
    				WHEN MATCHED THEN UPDATE SET 
    				WRC."FIRST_LEVEL_APPROVER" = CLSE."APPROVER1",
    				WRC."SECOND_LEVEL_APPROVER" = CLSE."APPROVER2",
    				WRC."THIRD_LEVEL_APPROVER" = CLSE."APPROVER3";
    				
    				--Work Related HR Claim
    				MERGE INTO "BENEFIT_WRC_HR_MASTER_CLAIM" WRC  
    				USING :LT_CLAIM_PROC_DATA AS CLSE
    				ON CLSE."CLAIM_OWNER_ID"   = WRC."EMPLOYEE_ID"
					AND CLSE."CLAIM_REFERENCE"= WRC."CLAIM_REFERENCE"
					AND CLSE."CATEGORY_CODE"='WRC_HR'
    				WHEN MATCHED THEN UPDATE SET 
    				WRC."FIRST_LEVEL_APPROVER" = CLSE."APPROVER1",
    				WRC."SECOND_LEVEL_APPROVER" = CLSE."APPROVER2",
    				WRC."THIRD_LEVEL_APPROVER" = CLSE."APPROVER3";
    				
    				
    				MERGE INTO "BENEFIT_AHP_LIC_MS_WIC_CLAIM" WRC  
    				USING :LT_CLAIM_PROC_DATA AS CLSE
    				ON CLSE."CLAIM_OWNER_ID"   = WRC."EMPLOYEE_ID"
					AND CLSE."CLAIM_REFERENCE"= WRC."CLAIM_REFERENCE"
					AND (CLSE."CATEGORY_CODE"='AHP'
					OR CLSE."CATEGORY_CODE"='WIC'
					OR CLSE."CATEGORY_CODE"='LIC'
					OR CLSE."CATEGORY_CODE"='MSR')
    				WHEN MATCHED THEN UPDATE SET 
    				WRC."FIRST_LEVEL_APPROVER" = CLSE."APPROVER1",
    				WRC."SECOND_LEVEL_APPROVER" = CLSE."APPROVER2",
    				WRC."THIRD_LEVEL_APPROVER" = CLSE."APPROVER3";
    				
    				
    				MERGE INTO "BENEFIT_SP_MASTER_CLAIM" WRC  
    				USING :LT_CLAIM_PROC_DATA AS CLSE
    				ON CLSE."CLAIM_OWNER_ID"   = WRC."EMPLOYEE_ID"
					AND CLSE."CLAIM_REFERENCE"= WRC."CLAIM_REFERENCE"
					AND CLSE."CATEGORY_CODE"='SP'
    				WHEN MATCHED THEN UPDATE SET 
    				WRC."FIRST_LEVEL_APPROVER" = CLSE."APPROVER1",
    				WRC."SECOND_LEVEL_APPROVER" = CLSE."APPROVER2",
    				WRC."THIRD_LEVEL_APPROVER" = CLSE."APPROVER3";
    				
                    MERGE INTO "BENEFIT_SP1_MASTER_CLAIM" WRC  
    				USING :LT_CLAIM_PROC_DATA AS CLSE
    				ON CLSE."CLAIM_OWNER_ID"   = WRC."EMPLOYEE_ID"
					AND CLSE."CLAIM_REFERENCE"= WRC."CLAIM_REFERENCE"
					AND CLSE."CATEGORY_CODE"='SP1'
    				WHEN MATCHED THEN UPDATE SET 
    				WRC."FIRST_LEVEL_APPROVER" = CLSE."APPROVER1",
    				WRC."SECOND_LEVEL_APPROVER" = CLSE."APPROVER2",
    				WRC."THIRD_LEVEL_APPROVER" = CLSE."APPROVER3";

                    MERGE INTO "BENEFIT_SP2_MASTER_CLAIM" WRC  
    				USING :LT_CLAIM_PROC_DATA AS CLSE
    				ON CLSE."CLAIM_OWNER_ID"   = WRC."EMPLOYEE_ID"
					AND CLSE."CLAIM_REFERENCE"= WRC."CLAIM_REFERENCE"
					AND CLSE."CATEGORY_CODE"='SP2'
    				WHEN MATCHED THEN UPDATE SET 
    				WRC."FIRST_LEVEL_APPROVER" = CLSE."APPROVER1",
    				WRC."SECOND_LEVEL_APPROVER" = CLSE."APPROVER2",
    				WRC."THIRD_LEVEL_APPROVER" = CLSE."APPROVER3";

                    MERGE INTO "BENEFIT_SP3_MASTER_CLAIM" WRC  
    				USING :LT_CLAIM_PROC_DATA AS CLSE
    				ON CLSE."CLAIM_OWNER_ID"   = WRC."EMPLOYEE_ID"
					AND CLSE."CLAIM_REFERENCE"= WRC."CLAIM_REFERENCE"
					AND CLSE."CATEGORY_CODE"='SP3'
    				WHEN MATCHED THEN UPDATE SET 
    				WRC."FIRST_LEVEL_APPROVER" = CLSE."APPROVER1",
    				WRC."SECOND_LEVEL_APPROVER" = CLSE."APPROVER2",
    				WRC."THIRD_LEVEL_APPROVER" = CLSE."APPROVER3";
    				
    				MERGE INTO "BENEFIT_PTF_ACL_BCL_CLAIM" WRC  
    				USING :LT_CLAIM_PROC_DATA AS CLSE
    				ON CLSE."CLAIM_OWNER_ID"   = WRC."EMPLOYEE_ID"
					AND CLSE."CLAIM_REFERENCE"= WRC."CLAIM_REFERENCE"
					AND (CLSE."CATEGORY_CODE"='PTF'
					OR CLSE."CATEGORY_CODE"='CLS')
    				WHEN MATCHED THEN UPDATE SET 
    				WRC."FIRST_LEVEL_APPROVER" = CLSE."APPROVER1",
    				WRC."SECOND_LEVEL_APPROVER" = CLSE."APPROVER2",
    				WRC."THIRD_LEVEL_APPROVER" = CLSE."APPROVER3";
    				
    				MERGE INTO "BENEFIT_PC_CLAIM" WRC  
    				USING :LT_CLAIM_PROC_DATA AS CLSE
    				ON CLSE."CLAIM_OWNER_ID"   = WRC."EMPLOYEE_ID"
					AND CLSE."CLAIM_REFERENCE"= WRC."CLAIM_REFERENCE"
					AND CLSE."CATEGORY_CODE"='PC'
    				WHEN MATCHED THEN UPDATE SET 
    				WRC."FIRST_LEVEL_APPROVER" = CLSE."APPROVER1",
    				WRC."SECOND_LEVEL_APPROVER" = CLSE."APPROVER2",
    				WRC."THIRD_LEVEL_APPROVER" = CLSE."APPROVER3";
    				
    				MERGE INTO "BENEFIT_COV_MASTER_CLAIM" WRC  
    				USING :LT_CLAIM_PROC_DATA AS CLSE
    				ON CLSE."CLAIM_OWNER_ID"   = WRC."EMPLOYEE_ID"
					AND CLSE."CLAIM_REFERENCE"= WRC."CLAIM_REFERENCE"
					AND CLSE."CATEGORY_CODE"='COV'
    				WHEN MATCHED THEN UPDATE SET 
    				WRC."FIRST_LEVEL_APPROVER" = CLSE."APPROVER1",
    				WRC."SECOND_LEVEL_APPROVER" = CLSE."APPROVER2",
    				WRC."THIRD_LEVEL_APPROVER" = CLSE."APPROVER3";
    				
    				MERGE INTO "BENEFIT_TC_MASTER_CLAIM" WRC  
    				USING :LT_CLAIM_PROC_DATA AS CLSE
    				ON CLSE."CLAIM_OWNER_ID"   = WRC."EMPLOYEE_ID"
					AND CLSE."CLAIM_REFERENCE"= WRC."CLAIM_REFERENCE"
					AND CLSE."CATEGORY_CODE"='TC'
    				WHEN MATCHED THEN UPDATE SET 
    				WRC."FIRST_LEVEL_APPROVER" = CLSE."APPROVER1",
    				WRC."SECOND_LEVEL_APPROVER" = CLSE."APPROVER2",
    				WRC."THIRD_LEVEL_APPROVER" = CLSE."APPROVER3";
    				
    				MERGE INTO "BENEFIT_SDFC_MASTER_CLAIM" SDFC  
    				USING :LT_CLAIM_PROC_DATA AS CLSE
    				ON CLSE."CLAIM_OWNER_ID"   = SDFC."EMPLOYEE_ID"
					AND CLSE."CLAIM_REFERENCE"= SDFC."CLAIM_REFERENCE"
					AND CLSE."CATEGORY_CODE"='SDFC'
    				WHEN MATCHED THEN UPDATE SET 
    				SDFC."FIRST_LEVEL_APPROVER" = CLSE."APPROVER1",
    				SDFC."SECOND_LEVEL_APPROVER" = CLSE."APPROVER2",
    				SDFC."THIRD_LEVEL_APPROVER" = CLSE."APPROVER3",
    				SDFC."FOURTH_LEVEL_APPROVER" = CLSE."APPROVER4";
    				
    				MERGE INTO "BENEFIT_SDFR_MASTER_CLAIM" SDFR  
    				USING :LT_CLAIM_PROC_DATA AS CLSE
    				ON CLSE."CLAIM_OWNER_ID"   = SDFR."EMPLOYEE_ID"
					AND CLSE."CLAIM_REFERENCE"= SDFR."CLAIM_REFERENCE"
					AND CLSE."CATEGORY_CODE"='SDFR'
    				WHEN MATCHED THEN UPDATE SET 
    				SDFR."FIRST_LEVEL_APPROVER" = CLSE."APPROVER1",
    				SDFR."SECOND_LEVEL_APPROVER" = CLSE."APPROVER2",
    				SDFR."THIRD_LEVEL_APPROVER" = CLSE."APPROVER3",
    				SDFR."FOURTH_LEVEL_APPROVER" = CLSE."APPROVER4";
    				
    				MERGE INTO "BENEFIT_CPC_MASTER_CLAIM" CPC  
    				USING :LT_CLAIM_PROC_DATA AS CLSE
    				ON CLSE."CLAIM_OWNER_ID"   = CPC."EMPLOYEE_ID"
					AND CLSE."CLAIM_REFERENCE"= CPC."CLAIM_REFERENCE"
					AND CLSE."CATEGORY_CODE"='CPC'
    				WHEN MATCHED THEN UPDATE SET 
    				CPC."FIRST_LEVEL_APPROVER" = CLSE."APPROVER1",
    				CPC."SECOND_LEVEL_APPROVER" = CLSE."APPROVER2",
    				CPC."THIRD_LEVEL_APPROVER" = CLSE."APPROVER3",
    				CPC."FOURTH_LEVEL_APPROVER" = CLSE."APPROVER4";
    				
    				MERGE INTO "BENEFIT_OC_MASTER_CLAIM" OC  
    				USING :LT_CLAIM_PROC_DATA AS CLSE
    				ON CLSE."CLAIM_OWNER_ID"   = OC."EMPLOYEE_ID"
					AND CLSE."CLAIM_REFERENCE"= OC."CLAIM_REFERENCE"
					AND CLSE."CATEGORY_CODE"='OC'
    				WHEN MATCHED THEN UPDATE SET 
    				OC."FIRST_LEVEL_APPROVER" = CLSE."APPROVER1",
    				OC."SECOND_LEVEL_APPROVER" = CLSE."APPROVER2",
    				OC."THIRD_LEVEL_APPROVER" = CLSE."APPROVER3",
    				OC."FOURTH_LEVEL_APPROVER" = CLSE."APPROVER4";
    				
    				MERGE INTO "BENEFIT_PAY_UP_MASTER_CLAIM" PAY_UP  
    				USING :LT_CLAIM_PROC_DATA AS CLSE
    				ON CLSE."CLAIM_OWNER_ID"   = PAY_UP."EMPLOYEE_ID"
					AND CLSE."CLAIM_REFERENCE"= PAY_UP."CLAIM_REFERENCE"
					AND CLSE."CATEGORY_CODE"='PAY_UP'
    				WHEN MATCHED THEN UPDATE SET 
    				PAY_UP."FIRST_LEVEL_APPROVER" = CLSE."APPROVER1",
    				PAY_UP."SECOND_LEVEL_APPROVER" = CLSE."APPROVER2",
    				PAY_UP."THIRD_LEVEL_APPROVER" = CLSE."APPROVER3",
    				PAY_UP."FOURTH_LEVEL_APPROVER" = CLSE."APPROVER4";
    				
    				
    				
		LT_VAR_OUT :='s'; 
	
END