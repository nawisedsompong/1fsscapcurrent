PROCEDURE "proc_master_data_sync"( 
	IN LT_DEPARTMENT_TABLE "tt_department",
	IN LT_DIVISION_TABLE "tt_division",
	IN LT_PA_TABLE "tt_personalArea",
	IN LT_PSA_TABLE "tt_personalSubArea",
	IN LT_SPECIALISATION_TABLE "tt_specialisation",
	IN LT_SPONSOR_TABLE "tt_sponsor",
	IN LT_PAYGRADE_TABLE "tt_payGrade",
	OUT LT_MSG_OUT NVARCHAR(50)
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
AS
BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		ROLLBACK;
		LT_MSG_OUT:='Error';
		SELECT ::SQL_ERROR_CODE AS "ERROR_CODE", ::SQL_ERROR_MESSAGE AS "ERROR_MESSAGE" FROM DUMMY;
	END;

	-- Department
    MERGE INTO "BENEFIT_CLAIM_DEPARTMENT" DEPARTMENT
	USING :LT_DEPARTMENT_TABLE AS TEMP_DEPARTMENT
	ON TEMP_DEPARTMENT."COMPANY" = DEPARTMENT."COMPANY"
	AND TEMP_DEPARTMENT."DEPARTMENT_CODE" = DEPARTMENT."DEPARTMENT_CODE"
	WHEN MATCHED THEN UPDATE SET DEPARTMENT."DEPARTMENT_DESC" = TEMP_DEPARTMENT."DEPARTMENT_DESC"
	WHEN NOT MATCHED THEN INSERT ("COMPANY", "DEPARTMENT_CODE", "DEPARTMENT_DESC")
	VALUES (TEMP_DEPARTMENT."COMPANY", TEMP_DEPARTMENT."DEPARTMENT_CODE", TEMP_DEPARTMENT."DEPARTMENT_DESC");
	
	--Division
	MERGE INTO "BENEFIT_CLAIM_DIVISION" DIVISION
	USING :LT_DIVISION_TABLE AS TEMP_DIVISION
	ON TEMP_DIVISION."COMPANY" = DIVISION."COMPANY"
	AND TEMP_DIVISION."DIVISION_CODE" = DIVISION."DIVISION_CODE"
	WHEN MATCHED THEN UPDATE SET DIVISION."DIVISION_DESC" = TEMP_DIVISION."DIVISION_DESC"
	WHEN NOT MATCHED THEN INSERT ("COMPANY", "DIVISION_CODE", "DIVISION_DESC")
	VALUES (TEMP_DIVISION."COMPANY", TEMP_DIVISION."DIVISION_CODE", TEMP_DIVISION."DIVISION_DESC");
	
	--Pay Grade
	MERGE INTO "BENEFIT_CLAIM_PAY_GRADE" PAY_GRADE
	USING :LT_PAYGRADE_TABLE AS TEMP_PAY_GRADE
	ON TEMP_PAY_GRADE."COMPANY" = PAY_GRADE."COMPANY"
	AND TEMP_PAY_GRADE."PAYGRADE_ID" = PAY_GRADE."PAYGRADE_ID"
	WHEN MATCHED THEN UPDATE SET PAY_GRADE."PAYGRADE_DESC" = TEMP_PAY_GRADE."PAYGRADE_DESC"
	WHEN NOT MATCHED THEN INSERT ("COMPANY", "PAYGRADE_ID", "PAYGRADE_DESC")
	VALUES (TEMP_PAY_GRADE."COMPANY", TEMP_PAY_GRADE."PAYGRADE_ID", TEMP_PAY_GRADE."PAYGRADE_DESC");
	
	--Personal Area
	MERGE INTO "BENEFIT_CLAIM_PA" PA
	USING :LT_PA_TABLE AS TEMP_PA
	ON TEMP_PA."COMPANY" = PA."COMPANY"
	AND TEMP_PA."PERSONAL_AREA" = PA."PERSONAL_AREA"
	WHEN MATCHED THEN UPDATE SET PA."PERSONAL_DESC" = TEMP_PA."PERSONAL_DESC"
	WHEN NOT MATCHED THEN INSERT ("COMPANY", "PERSONAL_AREA", "PERSONAL_DESC")
	VALUES (TEMP_PA."COMPANY", TEMP_PA."PERSONAL_AREA", TEMP_PA."PERSONAL_DESC");
	
	--Personal Sub Area
	MERGE INTO "BENEFIT_CLAIM_PSA" PSA
	USING :LT_PSA_TABLE AS TEMP_PSA
	ON TEMP_PSA."COMPANY" = PSA."COMPANY"
	AND TEMP_PSA."PERSONAL_SUB_AREA" = PSA."PERSONAL_SUB_AREA"
	WHEN MATCHED THEN UPDATE SET PSA."PERSONAL_SUB_DESC" = TEMP_PSA."PERSONAL_SUB_DESC"
	WHEN NOT MATCHED THEN INSERT ("COMPANY", "PERSONAL_SUB_AREA", "PERSONAL_SUB_DESC")
	VALUES (TEMP_PSA."COMPANY", TEMP_PSA."PERSONAL_SUB_AREA", TEMP_PSA."PERSONAL_SUB_DESC");
	
	--Specialisation
	MERGE INTO "BENEFIT_CLAIM_SPECIALISATION" SPECIALISATION
	USING :LT_SPECIALISATION_TABLE AS TEMP_SPECIALISATION
	ON TEMP_SPECIALISATION."COMPANY" = SPECIALISATION."COMPANY"
	AND TEMP_SPECIALISATION."SPECIAL_CODE" = SPECIALISATION."SPECIAL_CODE"
	WHEN MATCHED THEN UPDATE SET SPECIALISATION."SPECIAL_DESC" = TEMP_SPECIALISATION."SPECIAL_DESC"
	WHEN NOT MATCHED THEN INSERT ("COMPANY", "SPECIAL_CODE", "SPECIAL_DESC")
	VALUES (TEMP_SPECIALISATION."COMPANY", TEMP_SPECIALISATION."SPECIAL_CODE", TEMP_SPECIALISATION."SPECIAL_DESC");
	
	--Sponsor
	MERGE INTO "BENEFIT_CLAIM_SPONSOR" SPONSOR
	USING :LT_SPONSOR_TABLE AS TEMP_SPONSOR
	ON TEMP_SPONSOR."COMPANY" = SPONSOR."COMPANY"
	AND TEMP_SPONSOR."SPONSOR_CODE" = SPONSOR."SPONSOR_CODE"
	WHEN MATCHED THEN UPDATE SET SPONSOR."SPONSOR_DESC" = TEMP_SPONSOR."SPONSOR_DESC"
	WHEN NOT MATCHED THEN INSERT ("COMPANY", "SPONSOR_CODE", "SPONSOR_DESC")
	VALUES (TEMP_SPONSOR."COMPANY", TEMP_SPONSOR."SPONSOR_CODE", TEMP_SPONSOR."SPONSOR_DESC");
	
	COMMIT;
	LT_MSG_OUT:='Success';
END